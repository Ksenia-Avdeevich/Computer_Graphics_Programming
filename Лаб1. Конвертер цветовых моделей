Цель работы: Закрепить теоретические знания и освоить практические навыки по:
 - работе с различными цветовыми моделями (RGB, CMYK, HSV);
 - реализации алгоритмов конвертации между цветовыми моделями;
 - созданию интуитивно понятного графического интерфейса для работы с цветом;
 - обработке пользовательского ввода и валидации данных.

Задачи: Разработать приложение, позволяющее:
 - конвертировать цвета между моделями RGB, CMYK и HSV в реальном времени;
 - визуализировать текущий цвет с отображением его значений;
 - предоставлять multiple интерфейсы для ввода значений (слайдеры, спинбоксы, текстовые поля);
 - обеспечивать валидацию вводимых данных с выводом предупреждений;
 - интегрировать стандартный диалог выбора цвета из палитры.

Средства разработки:
 + Язык программирования: C++
 + Фреймворк: Qt 
 + Компилятор: MinGW 64-bit
 + Среда разработки: Qt Creator

Реализованные возможности приложения:

- Поддержка трех цветовых моделей:
   * RGB (Red, Green, Blue) - диапазон значений 0-255
   * CMYK (Cyan, Magenta, Yellow, Key) - диапазон значений 0.0-100.0%
   * HSV (Hue, Saturation, Value) - H: 0-359°, S/V: 0-255

 - Алгоритмы конвертации:
   * RGB → CMYK с учетом черной компоненты
   * CMYK → RGB с корректным преобразованием процентов
   * RGB → HSV с расчетом тона, насыщенности и яркости
   * HSV → RGB с использованием секторной модели

 - Множественные интерфейсы ввода:

   * Горизонтальные слайдеры для интуитивного выбора
   * Спинбоксы для точного численного ввода
   * Текстовые поля для прямого ручного ввода
   * Валидация вводимых данных с предупреждениями


Архитектура приложения:
 - Класс ColorConverterApp наследуется от QMainWindow 
 - Разделение интерфейса на логические группы (RGB, CMYK, HSV)
 - Использование сигналов и слотов для реактивного обновления

Вывод: В ходе лабораторной работы успешно разработано кроссплатформенное приложение для конвертации цветов между различными моделями. Приложение демонстрирует высокую точность преобразований, интуитивно понятный интерфейс и надежную обработку пользовательского ввода. Реализованная система валидации данных обеспечивает корректность работы приложения даже при ошибочном вводе. Архитектура приложения допускает легкое расширение функциональности для поддержки дополнительных цветовых моделей в будущем.
